--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class sp.SkeletonRenderer : sp.Node,sp.BlendProtocol
local m = {}

--- 
---@param scale float
---@return sp.SkeletonRenderer
function m:setTimeScale(scale) end

--- 
---@return boolean
function m:getDebugSlotsEnabled() end

--- 
---@return sp.SkeletonRenderer
function m:setBonesToSetupPose() end

--- 
---@param skeletonData spSkeletonData
---@param ownsSkeletonData boolean
---@return sp.SkeletonRenderer
function m:initWithData(skeletonData, ownsSkeletonData) end

--- 
---@param enabled boolean
---@return sp.SkeletonRenderer
function m:setDebugSlotsEnabled(enabled) end

---@overload fun(self:sp.SkeletonRenderer, skeletonDataFile:string, atlas:string, scale:float):sp.SkeletonRenderer
---@param skeletonDataFile string
---@param atlas spAtlas
---@param scale float
---@return sp.SkeletonRenderer
function m:initWithJsonFile(skeletonDataFile, atlas, scale) end

--- 
---@return sp.SkeletonRenderer
function m:setSlotsToSetupPose() end

---@overload fun(self:sp.SkeletonRenderer, skeletonDataFile:string, atlas:string, scale:float):sp.SkeletonRenderer
---@param skeletonDataFile string
---@param atlas spAtlas
---@param scale float
---@return sp.SkeletonRenderer
function m:initWithBinaryFile(skeletonDataFile, atlas, scale) end

--- 
---@return sp.SkeletonRenderer
function m:setToSetupPose() end

--- 
---@return cc.BlendFunc
function m:getBlendFunc() end

--- 
---@return sp.SkeletonRenderer
function m:initialize() end

--- 
---@param enabled boolean
---@return sp.SkeletonRenderer
function m:setDebugBonesEnabled(enabled) end

--- 
---@return boolean
function m:getDebugBonesEnabled() end

--- 
---@return float
function m:getTimeScale() end

--- 
---@param blendFunc cc.BlendFunc
---@return sp.SkeletonRenderer
function m:setBlendFunc(blendFunc) end

---@overload fun(self:sp.SkeletonRenderer, skinName:char):boolean
---@param skinName string
---@return boolean
function m:setSkin(skinName) end

--- 
---@return spSkeleton
function m:getSkeleton() end

---@overload fun(self:sp.SkeletonRenderer, skeletonDataFile:string, atlas:string, scale:float):sp.SkeletonRenderer
---@param skeletonDataFile string
---@param atlas spAtlas
---@param scale float
---@return sp.SkeletonRenderer
function m:createWithFile(skeletonDataFile, atlas, scale) end

--- 
---@return sp.SkeletonRenderer
function m:create() end

--- 
---@return sp.SkeletonRenderer
function m:onEnter() end

--- 
---@return sp.SkeletonRenderer
function m:onExit() end

--- 
---@param value boolean
---@return sp.SkeletonRenderer
function m:setOpacityModifyRGB(value) end

--- 
---@return cc.rect
function m:getBoundingBox() end

--- 
---@return boolean
function m:isOpacityModifyRGB() end

---@overload fun(self:sp.SkeletonRenderer, skeletonDataFile:spSkeletonData, atlasFile:boolean):sp.SkeletonRenderer
---@overload fun(self:sp.SkeletonRenderer):sp.SkeletonRenderer
---@overload fun(self:sp.SkeletonRenderer, skeletonDataFile:string, atlasFile:spAtlas, scale:float):sp.SkeletonRenderer
---@param skeletonDataFile string
---@param atlasFile string
---@param scale float
---@return sp.SkeletonRenderer
function m:SkeletonRenderer(skeletonDataFile, atlasFile, scale) end



return m