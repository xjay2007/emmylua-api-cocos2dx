--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.LayerGradient : cc.LayerColor
local m = {}

---  Returns the start color of the gradient.<br>
--- return The start color.
---@return cc.c3b
function m:getStartColor() end

---  Get the compressedInterpolation<br>
--- return The interpolation will be compressed if true.
---@return boolean
function m:isCompressedInterpolation() end

---  Returns the start opacity of the gradient.<br>
--- return The start opacity.
---@return uchar
function m:getStartOpacity() end

---  Sets the directional vector that will be used for the gradient.<br>
--- The default value is vertical direction (0,-1). <br>
--- param alongVector The direction of gradient.
---@param alongVector cc.vec2
---@return cc.LayerGradient
function m:setVector(alongVector) end

---  Returns the start opacity of the gradient.<br>
--- param startOpacity The start opacity, from 0 to 255.
---@param startOpacity uchar
---@return cc.LayerGradient
function m:setStartOpacity(startOpacity) end

---  Whether or not the interpolation will be compressed in order to display all the colors of the gradient both in canonical and non canonical vectors.<br>
--- Default: true.<br>
--- param compressedInterpolation The interpolation will be compressed if true.
---@param compressedInterpolation boolean
---@return cc.LayerGradient
function m:setCompressedInterpolation(compressedInterpolation) end

---  Returns the end opacity of the gradient.<br>
--- param endOpacity The end opacity, from 0 to 255.
---@param endOpacity uchar
---@return cc.LayerGradient
function m:setEndOpacity(endOpacity) end

---  Returns the directional vector used for the gradient.<br>
--- return The direction of gradient.
---@return cc.vec2
function m:getVector() end

---  Sets the end color of the gradient.<br>
--- param endColor The end color.
---@param endColor cc.c3b
---@return cc.LayerGradient
function m:setEndColor(endColor) end

---@overload fun(self:cc.LayerGradient, start:cc.c4b, end_:cc.c4b):boolean
---@param start cc.c4b
---@param end_ cc.c4b
---@param v cc.vec2
---@return boolean
function m:initWithColor(start, end_, v) end

---  Returns the end color of the gradient.<br>
--- return The end color.
---@return cc.c3b
function m:getEndColor() end

---  Returns the end opacity of the gradient.<br>
--- return The end opacity.
---@return uchar
function m:getEndOpacity() end

---  Sets the start color of the gradient.<br>
--- param startColor The start color.
---@param startColor cc.c3b
---@return cc.LayerGradient
function m:setStartColor(startColor) end

---@overload fun(self:cc.LayerGradient, start:cc.c4b, end_:cc.c4b):cc.LayerGradient
---@overload fun(self:cc.LayerGradient):cc.LayerGradient
---@param start cc.c4b
---@param end_ cc.c4b
---@param v cc.vec2
---@return cc.LayerGradient
function m:create(start, end_, v) end

--- 
---@return boolean
function m:init() end

--- 
---@return string
function m:getDescription() end

--- 
---@return cc.LayerGradient
function m:LayerGradient() end



return m