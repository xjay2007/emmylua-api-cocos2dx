--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.Physics3DConstraint : cc.Ref
local m = {}

--- set enable or not
---@param enabled boolean
---@return cc.Physics3DConstraint
function m:setEnabled(enabled) end

--- set the impulse that break the constraint
---@param impulse float
---@return cc.Physics3DConstraint
function m:setBreakingImpulse(impulse) end

--- get user data
---@return void
function m:getUserData() end

--- get the impulse that break the constraint
---@return float
function m:getBreakingImpulse() end

--- get rigid body a
---@return cc.Physics3DRigidBody
function m:getBodyA() end

--- is it enabled
---@return boolean
function m:isEnabled() end

--- get override number of solver iterations
---@return int
function m:getOverrideNumSolverIterations() end

--- get rigid body b
---@return cc.Physics3DRigidBody
function m:getBodyB() end

--- override the number of constraint solver iterations used to solve this constraint, -1 will use the default number of iterations, as specified in SolverInfo.m_numIterations
---@param overrideNumIterations int
---@return cc.Physics3DConstraint
function m:setOverrideNumSolverIterations(overrideNumIterations) end

--- get constraint type
---@return int
function m:getConstraintType() end

--- get user data
---@param userData void
---@return cc.Physics3DConstraint
function m:setUserData(userData) end

--- 
---@return btTypedConstraint
function m:getbtContraint() end



return m