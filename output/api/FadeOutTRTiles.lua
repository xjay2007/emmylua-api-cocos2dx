--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.FadeOutTRTiles : cc.TiledGrid3DAction
local m = {}

--- brief Show the tile at specified position.<br>
--- param pos The position index of the tile should be shown.
---@param pos cc.vec2
---@return cc.FadeOutTRTiles
function m:turnOnTile(pos) end

--- brief Hide the tile at specified position.<br>
--- param pos The position index of the tile should be hide.
---@param pos cc.vec2
---@return cc.FadeOutTRTiles
function m:turnOffTile(pos) end

--- brief Show part of the tile.<br>
--- param pos The position index of the tile should be shown.<br>
--- param distance The percentage that the tile should be shown.
---@param pos cc.vec2
---@param distance float
---@return cc.FadeOutTRTiles
function m:transformTile(pos, distance) end

--- brief Calculate the percentage a tile should be shown.<br>
--- param pos The position index of the tile.<br>
--- param time The current percentage of the action.<br>
--- return Return the percentage the tile should be shown.
---@param pos cc.size
---@param time float
---@return float
function m:testFunc(pos, time) end

--- brief Create the action with the grid size and the duration.<br>
--- param duration Specify the duration of the FadeOutTRTiles action. It's a value in seconds.<br>
--- param gridSize Specify the size of the grid.<br>
--- return If the creation success, return a pointer of FadeOutTRTiles action; otherwise, return nil.
---@param duration float
---@param gridSize cc.size
---@return cc.FadeOutTRTiles
function m:create(duration, gridSize) end

--- 
---@return cc.FadeOutTRTiles
function m:clone() end

--- 
---@param time float
---@return cc.FadeOutTRTiles
function m:update(time) end

--- 
---@return cc.FadeOutTRTiles
function m:FadeOutTRTiles() end



return m