--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class ccui.LoadingBar : ccui.Widget
local m = {}

--- Changes the progress value of LoadingBar.<br>
--- param percent   Percent value from 1 to 100.
---@param percent float
---@return ccui.LoadingBar
function m:setPercent(percent) end

--- Load texture for LoadingBar.<br>
--- param texture   File name of texture.<br>
---@param texture string
---@param texType int
---@return ccui.LoadingBar
function m:loadTexture(texture, texType) end

--- Change the progress direction of LoadingBar.<br>
--- see Direction  `LEFT` means progress left to right, `RIGHT` otherwise.<br>
--- param direction Direction
---@param direction int
---@return ccui.LoadingBar
function m:setDirection(direction) end

--- 
---@return cc.ResourceData
function m:getRenderFile() end

--- Enable scale9 renderer.<br>
--- param enabled Set to true will use scale9 renderer, false otherwise.
---@param enabled boolean
---@return ccui.LoadingBar
function m:setScale9Enabled(enabled) end

--- Set capInsets for LoadingBar.<br>
--- This setting only take effect when enable scale9 renderer.<br>
--- param capInsets CapInset in `Rect`.
---@param capInsets cc.rect
---@return ccui.LoadingBar
function m:setCapInsets(capInsets) end

--- Get the progress direction of LoadingBar.<br>
--- see Direction  `LEFT` means progress left to right, `RIGHT` otherwise.<br>
--- return LoadingBar progress direction.
---@return int
function m:getDirection() end

--- brief Query LoadingBar's capInsets.<br>
--- return CapInsets of LoadingBar.
---@return cc.rect
function m:getCapInsets() end

--- brief Query whether LoadingBar is using scale9 renderer or not.<br>
--- return Whether LoadingBar uses scale9 renderer or not.
---@return boolean
function m:isScale9Enabled() end

--- Get the progress value of LoadingBar.<br>
--- return Progress value from 1 to 100.
---@return float
function m:getPercent() end

---@overload fun(self:ccui.LoadingBar, textureName:string, texType:float):ccui.LoadingBar
---@overload fun(self:ccui.LoadingBar):ccui.LoadingBar
---@param textureName string
---@param texType int
---@param percentage float
---@return ccui.LoadingBar
function m:create(textureName, texType, percentage) end

--- 
---@return cc.Ref
function m:createInstance() end

--- 
---@return cc.Node
function m:getVirtualRenderer() end

--- 
---@return string
function m:getDescription() end

--- 
---@return cc.size
function m:getVirtualRendererSize() end

--- 
---@param ignore boolean
---@return ccui.LoadingBar
function m:ignoreContentAdaptWithSize(ignore) end

--- Default constructor.<br>
--- js ctor<br>
--- lua new
---@return ccui.LoadingBar
function m:LoadingBar() end



return m