--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class ccui.Slider : ccui.Widget
local m = {}

--- Changes the progress direction of slider.<br>
--- param percent  Percent value from 1 to 100.
---@param percent int
---@return ccui.Slider
function m:setPercent(percent) end

--- Query the maximum percent of Slider. The default value is 100.<br>
--- since v3.7<br>
--- return The maximum percent of the Slider.
---@return int
function m:getMaxPercent() end

--- Load normal state texture for slider ball.<br>
--- param normal    Normal state texture.<br>
---@param normal string
---@param resType int
---@return ccui.Slider
function m:loadSlidBallTextureNormal(normal, resType) end

--- Load dark state texture for slider progress bar.<br>
--- param fileName   File path of texture.<br>
---@param fileName string
---@param resType int
---@return ccui.Slider
function m:loadProgressBarTexture(fileName, resType) end

--- 
---@return cc.ResourceData
function m:getBallNormalFile() end

--- 
---@return cc.Sprite
function m:getSlidBallDisabledRenderer() end

--- Sets if slider is using scale9 renderer.<br>
--- param able True that using scale9 renderer, false otherwise.
---@param able boolean
---@return ccui.Slider
function m:setScale9Enabled(able) end

--- 
---@return cc.ResourceData
function m:getBallPressedFile() end

--- brief Return a zoom scale<br>
--- since v3.3
---@return float
function m:getZoomScale() end

--- Sets capinsets for progress bar slider, if slider is using scale9 renderer.<br>
--- param capInsets Capinsets for progress bar slider.<br>
--- js NA
---@param capInsets cc.rect
---@return ccui.Slider
function m:setCapInsetProgressBarRenderer(capInsets) end

--- Load textures for slider ball.<br>
--- param normal     Normal state texture.<br>
--- param pressed    Pressed state texture.<br>
--- param disabled    Disabled state texture.<br>
---@param normal string
---@param pressed string
---@param disabled string
---@param texType int
---@return ccui.Slider
function m:loadSlidBallTextures(normal, pressed, disabled, texType) end

--- 
---@return cc.Node
function m:getSlidBallRenderer() end

--- Add call back function called when slider's percent has changed to slider.<br>
--- param callback An given call back function called when slider's percent has changed to slider.
---@param callback fun
---@return ccui.Slider
function m:addEventListener(callback) end

--- Set a large value could give more control to the precision.<br>
--- since v3.7<br>
--- param percent The max percent of Slider.
---@param percent int
---@return ccui.Slider
function m:setMaxPercent(percent) end

--- Load texture for slider bar.<br>
--- param fileName   File name of texture.<br>
---@param fileName string
---@param resType int
---@return ccui.Slider
function m:loadBarTexture(fileName, resType) end

--- 
---@return cc.ResourceData
function m:getProgressBarFile() end

--- Gets capinsets for bar slider, if slider is using scale9 renderer.<br>
--- return capInsets Capinsets for bar slider.
---@return cc.rect
function m:getCapInsetsBarRenderer() end

--- Gets capinsets for progress bar slider, if slider is using scale9 renderer.<br>
--- return Capinsets for progress bar slider.<br>
--- js NA
---@return cc.rect
function m:getCapInsetsProgressBarRenderer() end

--- 
---@return cc.Sprite
function m:getSlidBallPressedRenderer() end

--- Load pressed state texture for slider ball.<br>
--- param pressed    Pressed state texture.<br>
---@param pressed string
---@param resType int
---@return ccui.Slider
function m:loadSlidBallTexturePressed(pressed, resType) end

--- 
---@return cc.ResourceData
function m:getBackFile() end

--- Gets If slider is using scale9 renderer.<br>
--- return True that using scale9 renderer, false otherwise.
---@return boolean
function m:isScale9Enabled() end

--- 
---@return cc.ResourceData
function m:getBallDisabledFile() end

--- Sets capinsets for bar slider, if slider is using scale9 renderer.<br>
--- param capInsets Capinsets for bar slider.
---@param capInsets cc.rect
---@return ccui.Slider
function m:setCapInsetsBarRenderer(capInsets) end

--- Gets the progress direction of slider.<br>
--- return percent Percent value from 1 to 100.
---@return int
function m:getPercent() end

--- Sets capinsets for slider, if slider is using scale9 renderer.<br>
--- param capInsets Capinsets for slider.
---@param capInsets cc.rect
---@return ccui.Slider
function m:setCapInsets(capInsets) end

--- Load disabled state texture for slider ball.<br>
--- param disabled   Disabled state texture.<br>
---@param disabled string
---@param resType int
---@return ccui.Slider
function m:loadSlidBallTextureDisabled(disabled, resType) end

--- 
---@return cc.Sprite
function m:getSlidBallNormalRenderer() end

---  When user pressed the button, the button will zoom to a scale.<br>
--- The final scale of the button  equals (button original scale + _zoomScale)<br>
--- since v3.3
---@param scale float
---@return ccui.Slider
function m:setZoomScale(scale) end

---@overload fun(self:ccui.Slider):ccui.Slider
---@param barTextureName string
---@param normalBallTextureName string
---@param resType int
---@return ccui.Slider
function m:create(barTextureName, normalBallTextureName, resType) end

--- 
---@return cc.Ref
function m:createInstance() end

--- 
---@return cc.Node
function m:getVirtualRenderer() end

--- 
---@param ignore boolean
---@return ccui.Slider
function m:ignoreContentAdaptWithSize(ignore) end

--- Returns the "class name" of widget.
---@return string
function m:getDescription() end

--- 
---@param pt cc.vec2
---@param camera cc.Camera
---@param p cc.vec3
---@return boolean
function m:hitTest(pt, camera, p) end

--- 
---@return boolean
function m:init() end

--- 
---@return cc.size
function m:getVirtualRendererSize() end

--- Default constructor.<br>
--- js ctor<br>
--- lua new
---@return ccui.Slider
function m:Slider() end



return m