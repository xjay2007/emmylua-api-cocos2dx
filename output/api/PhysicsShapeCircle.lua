--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.PhysicsShapeCircle : cc.PhysicsShape
local m = {}

--- Get the circle's radius.<br>
--- return A float number.
---@return float
function m:getRadius() end

--- Creates a PhysicsShapeCircle with specified value.<br>
--- param   radius A float number, it is the circle's radius.<br>
--- param   material A PhysicsMaterial object, the default value is PHYSICSSHAPE_MATERIAL_DEFAULT.<br>
--- param   offset A Vec2 object, it is the offset from the body's center of gravity in body local coordinates.<br>
--- return  An autoreleased PhysicsShapeCircle object pointer.
---@param radius float
---@param material cc.PhysicsMaterial
---@param offset cc.vec2
---@return cc.PhysicsShapeCircle
function m:create(radius, material, offset) end

--- Calculate the area of a circle with specified radius.<br>
--- param radius A float number<br>
--- return A float number
---@param radius float
---@return float
function m:calculateArea(radius) end

--- Calculate the moment of a circle with specified value.<br>
--- param mass A float number<br>
--- param radius A float number<br>
--- param offset A Vec2 object, it is the offset from the body's center of gravity in body local coordinates.<br>
--- return A float number
---@param mass float
---@param radius float
---@param offset cc.vec2
---@return float
function m:calculateMoment(mass, radius, offset) end

--- Get this circle's position offset.<br>
--- return A Vec2 object.
---@return cc.vec2
function m:getOffset() end

--- Calculate the moment for a circle.<br>
--- return A float number.
---@return float
function m:calculateDefaultMoment() end



return m