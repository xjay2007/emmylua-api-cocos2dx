--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.ControlStepper : cc.Control
local m = {}

--- 
---@return cc.Sprite
function m:getMinusSprite() end

--- 
---@param value double
---@return cc.ControlStepper
function m:setValue(value) end

--- 
---@param stepValue double
---@return cc.ControlStepper
function m:setStepValue(stepValue) end

--- 
---@param minusSprite cc.Sprite
---@param plusSprite cc.Sprite
---@return boolean
function m:initWithMinusSpriteAndPlusSprite(minusSprite, plusSprite) end

---  Set the numeric value of the stepper. If send is true, the Control::EventType::VALUE_CHANGED is sent. 
---@param value double
---@param send boolean
---@return cc.ControlStepper
function m:setValueWithSendingEvent(value, send) end

--- 
---@param maximumValue double
---@return cc.ControlStepper
function m:setMaximumValue(maximumValue) end

--- 
---@return cc.Label
function m:getMinusLabel() end

--- 
---@return cc.Label
function m:getPlusLabel() end

--- 
---@param wraps boolean
---@return cc.ControlStepper
function m:setWraps(wraps) end

--- 
---@param var cc.Label
---@return cc.ControlStepper
function m:setMinusLabel(var) end

---  Start the autorepeat increment/decrement. 
---@return cc.ControlStepper
function m:startAutorepeat() end

---  Update the layout of the stepper with the given touch location. 
---@param location cc.vec2
---@return cc.ControlStepper
function m:updateLayoutUsingTouchLocation(location) end

--- 
---@return boolean
function m:isContinuous() end

---  Stop the autorepeat. 
---@return cc.ControlStepper
function m:stopAutorepeat() end

--- 
---@param minimumValue double
---@return cc.ControlStepper
function m:setMinimumValue(minimumValue) end

--- 
---@param var cc.Label
---@return cc.ControlStepper
function m:setPlusLabel(var) end

--- 
---@return double
function m:getValue() end

--- 
---@return cc.Sprite
function m:getPlusSprite() end

--- 
---@param var cc.Sprite
---@return cc.ControlStepper
function m:setPlusSprite(var) end

--- 
---@param var cc.Sprite
---@return cc.ControlStepper
function m:setMinusSprite(var) end

--- 
---@param minusSprite cc.Sprite
---@param plusSprite cc.Sprite
---@return cc.ControlStepper
function m:create(minusSprite, plusSprite) end

--- 
---@param pTouch cc.Touch
---@param pEvent cc.Event
---@return cc.ControlStepper
function m:onTouchMoved(pTouch, pEvent) end

--- 
---@param pTouch cc.Touch
---@param pEvent cc.Event
---@return cc.ControlStepper
function m:onTouchEnded(pTouch, pEvent) end

--- 
---@param dt float
---@return cc.ControlStepper
function m:update(dt) end

--- 
---@param pTouch cc.Touch
---@param pEvent cc.Event
---@return boolean
function m:onTouchBegan(pTouch, pEvent) end

--- js ctor<br>
--- lua new
---@return cc.ControlStepper
function m:ControlStepper() end



return m