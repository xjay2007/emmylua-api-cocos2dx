--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.UserDefault
local m = {}

--- Set integer value by key.<br>
--- param key The key to set.<br>
--- param value A integer value to set to the key.<br>
--- js NA
---@param key char
---@param value int
---@return cc.UserDefault
function m:setIntegerForKey(key, value) end

--- delete any value by key,<br>
--- param key The key to delete value.<br>
--- js NA
---@param key char
---@return cc.UserDefault
function m:deleteValueForKey(key) end

---@overload fun(self:cc.UserDefault, key:char):float
---@param key char
---@param defaultValue float
---@return float
function m:getFloatForKey(key, defaultValue) end

---@overload fun(self:cc.UserDefault, key:char):boolean
---@param key char
---@param defaultValue boolean
---@return boolean
function m:getBoolForKey(key, defaultValue) end

--- Set double value by key.<br>
--- param key The key to set.<br>
--- param value A double value to set to the key.<br>
--- js NA
---@param key char
---@param value double
---@return cc.UserDefault
function m:setDoubleForKey(key, value) end

--- Set float value by key.<br>
--- param key The key to set.<br>
--- param value A float value to set to the key.<br>
--- js NA
---@param key char
---@param value float
---@return cc.UserDefault
function m:setFloatForKey(key, value) end

---@overload fun(self:cc.UserDefault, key:char):string
---@param key char
---@param defaultValue string
---@return string
function m:getStringForKey(key, defaultValue) end

--- Set string value by key.<br>
--- param key The key to set.<br>
--- param value A string value to set to the key.<br>
--- js NA
---@param key char
---@param value string
---@return cc.UserDefault
function m:setStringForKey(key, value) end

--- You should invoke this function to save values set by setXXXForKey().<br>
--- js NA
---@return cc.UserDefault
function m:flush() end

---@overload fun(self:cc.UserDefault, key:char):int
---@param key char
---@param defaultValue int
---@return int
function m:getIntegerForKey(key, defaultValue) end

---@overload fun(self:cc.UserDefault, key:char):double
---@param key char
---@param defaultValue double
---@return double
function m:getDoubleForKey(key, defaultValue) end

--- Set bool value by key.<br>
--- param key The key to set.<br>
--- param value A bool value to set to the key.<br>
--- js NA
---@param key char
---@param value boolean
---@return cc.UserDefault
function m:setBoolForKey(key, value) end

--- js NA
---@return cc.UserDefault
function m:destroyInstance() end

---  All supported platforms other iOS & Android use xml file to save values. This function is return the file path of the xml path.<br>
--- js NA
---@return string
function m:getXMLFilePath() end

---  All supported platforms other iOS & Android and CC_PLATFORM_WINRT use xml file to save values. This function checks whether the xml file exists or not.<br>
--- return True if the xml file exists, false if not.<br>
--- js NA
---@return boolean
function m:isXMLFileExist() end



return m