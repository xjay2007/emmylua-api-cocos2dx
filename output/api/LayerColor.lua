--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.LayerColor : cc.Layer,cc.BlendProtocol
local m = {}

---  Change width and height in Points.<br>
--- param w The width of layer.<br>
--- param h The Height of layer.<br>
--- since v0.8
---@param w float
---@param h float
---@return cc.LayerColor
function m:changeWidthAndHeight(w, h) end

---  BlendFunction. Conforms to BlendProtocol protocol <br>
--- lua NA
---@return cc.BlendFunc
function m:getBlendFunc() end

--- code<br>
--- When this function bound into js or lua,the parameter will be changed<br>
--- In js: var setBlendFunc(var src, var dst)<br>
--- In lua: local setBlendFunc(local src, local dst)<br>
--- endcode
---@param blendFunc cc.BlendFunc
---@return cc.LayerColor
function m:setBlendFunc(blendFunc) end

---  Change width in Points.<br>
--- param w The width of layer.
---@param w float
---@return cc.LayerColor
function m:changeWidth(w) end

---@overload fun(self:cc.LayerColor, color:cc.c4b):boolean
---@param color cc.c4b
---@param width float
---@param height float
---@return boolean
function m:initWithColor(color, width, height) end

---  Change height in Points.<br>
--- param h The height of layer.
---@param h float
---@return cc.LayerColor
function m:changeHeight(h) end

---@overload fun(self:cc.LayerColor):cc.LayerColor
---@overload fun(self:cc.LayerColor, color:cc.c4b):cc.LayerColor
---@param color cc.c4b
---@param width float
---@param height float
---@return cc.LayerColor
function m:create(color, width, height) end

--- 
---@param renderer cc.Renderer
---@param transform mat4_table
---@param flags uint
---@return cc.LayerColor
function m:draw(renderer, transform, flags) end

--- 
---@return boolean
function m:init() end

--- 
---@return string
function m:getDescription() end

--- 
---@param var cc.size
---@return cc.LayerColor
function m:setContentSize(var) end

--- 
---@return cc.LayerColor
function m:LayerColor() end



return m