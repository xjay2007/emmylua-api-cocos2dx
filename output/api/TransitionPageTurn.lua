--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.TransitionPageTurn : cc.TransitionScene
local m = {}

---  Returns the action that will be performed with size.<br>
--- param vector A given size.<br>
--- return The action that will be performed.
---@param vector cc.size
---@return cc.ActionInterval
function m:actionWithSize(vector) end

--- Creates a base transition with duration and incoming scene.<br>
--- If back is true then the effect is reversed to appear as if the incoming<br>
--- scene is being turned from left over the outgoing scene.<br>
--- param t Duration time, in seconds.<br>
--- param scene A given scene.<br>
--- param backwards If back is true then the effect is reversed to appear as if the incoming scene is being turned from left over the outgoing scene.<br>
--- return True if initialize success.
---@param t float
---@param scene cc.Scene
---@param backwards boolean
---@return boolean
function m:initWithDuration(t, scene, backwards) end

--- Creates a base transition with duration and incoming scene.<br>
--- If back is true then the effect is reversed to appear as if the incoming<br>
--- scene is being turned from left over the outgoing scene.<br>
--- param t Duration time, in seconds.<br>
--- param scene A given scene.<br>
--- param backwards If back is true then the effect is reversed to appear as if the incoming scene is being turned from left over the outgoing scene.<br>
--- return An autoreleased TransitionPageTurn object.
---@param t float
---@param scene cc.Scene
---@param backwards boolean
---@return cc.TransitionPageTurn
function m:create(t, scene, backwards) end

--- 
---@param renderer cc.Renderer
---@param transform mat4_table
---@param flags uint
---@return cc.TransitionPageTurn
function m:draw(renderer, transform, flags) end

--- js ctor
---@return cc.TransitionPageTurn
function m:TransitionPageTurn() end



return m