--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.Ripple3D : cc.Grid3DAction
local m = {}

--- brief Set the amplitude rate of ripple effect.<br>
--- param fAmplitudeRate The amplitude rate of ripple effect.
---@param fAmplitudeRate float
---@return cc.Ripple3D
function m:setAmplitudeRate(fAmplitudeRate) end

--- brief Initializes the action with center position, radius, number of waves, amplitude, a grid size and duration.<br>
--- param duration Specify the duration of the Ripple3D action. It's a value in seconds.<br>
--- param gridSize Specify the size of the grid.<br>
--- param position Specify the center position of the ripple effect.<br>
--- param radius Specify the radius of the ripple effect.<br>
--- param waves Specify the waves count of the ripple effect.<br>
--- param amplitude Specify the amplitude of the ripple effect.<br>
--- return If the initialization success, return true; otherwise, return false.
---@param duration float
---@param gridSize cc.size
---@param position cc.vec2
---@param radius float
---@param waves uint
---@param amplitude float
---@return boolean
function m:initWithDuration(duration, gridSize, position, radius, waves, amplitude) end

--- brief Get the amplitude rate of ripple effect.<br>
--- return The amplitude rate of ripple effect.
---@return float
function m:getAmplitudeRate() end

--- brief Set the amplitude of ripple effect.<br>
--- param fAmplitude The amplitude of ripple effect.
---@param fAmplitude float
---@return cc.Ripple3D
function m:setAmplitude(fAmplitude) end

--- brief Get the amplitude of ripple effect.<br>
--- return The amplitude of ripple effect.
---@return float
function m:getAmplitude() end

--- brief Set the center position of ripple effect.<br>
--- param position The center position of ripple effect will be set.
---@param position cc.vec2
---@return cc.Ripple3D
function m:setPosition(position) end

--- brief Get the center position of ripple effect.<br>
--- return The center position of ripple effect.
---@return cc.vec2
function m:getPosition() end

--- brief Create the action with center position, radius, number of waves, amplitude, a grid size and duration.<br>
--- param duration Specify the duration of the Ripple3D action. It's a value in seconds.<br>
--- param gridSize Specify the size of the grid.<br>
--- param position Specify the center position of the ripple effect.<br>
--- param radius Specify the radius of the ripple effect.<br>
--- param waves Specify the waves count of the ripple effect.<br>
--- param amplitude Specify the amplitude of the ripple effect.<br>
--- return If the creation success, return a pointer of Ripple3D action; otherwise, return nil.
---@param duration float
---@param gridSize cc.size
---@param position cc.vec2
---@param radius float
---@param waves uint
---@param amplitude float
---@return cc.Ripple3D
function m:create(duration, gridSize, position, radius, waves, amplitude) end

--- 
---@return cc.Ripple3D
function m:clone() end

--- 
---@param time float
---@return cc.Ripple3D
function m:update(time) end

--- 
---@return cc.Ripple3D
function m:Ripple3D() end



return m