--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.Twirl : cc.Grid3DAction
local m = {}

--- brief Set the amplitude rate of the effect.<br>
--- param amplitudeRate The value of amplitude rate will be set.
---@param amplitudeRate float
---@return cc.Twirl
function m:setAmplitudeRate(amplitudeRate) end

--- brief Initializes the action with center position, number of twirls, amplitude, a grid size and duration.<br>
--- param duration Specify the duration of the Twirl action. It's a value in seconds.<br>
--- param gridSize Specify the size of the grid.<br>
--- param position Specify the center position of the twirl action.<br>
--- param twirls Specify the twirls count of the Twirl action.<br>
--- param amplitude Specify the amplitude of the Twirl action.<br>
--- return If the initialization success, return true; otherwise, return false.
---@param duration float
---@param gridSize cc.size
---@param position cc.vec2
---@param twirls uint
---@param amplitude float
---@return boolean
function m:initWithDuration(duration, gridSize, position, twirls, amplitude) end

--- brief Get the amplitude rate of the effect.<br>
--- return Return the amplitude rate of the effect.
---@return float
function m:getAmplitudeRate() end

--- brief Set the amplitude to the effect.<br>
--- param amplitude The value of amplitude will be set.
---@param amplitude float
---@return cc.Twirl
function m:setAmplitude(amplitude) end

--- brief Get the amplitude of the effect.<br>
--- return Return the amplitude of the effect.
---@return float
function m:getAmplitude() end

--- brief Set the center position of twirl action.<br>
--- param position The center position of twirl action will be set.
---@param position cc.vec2
---@return cc.Twirl
function m:setPosition(position) end

--- brief Get the center position of twirl action.<br>
--- return The center position of twirl action.
---@return cc.vec2
function m:getPosition() end

--- brief Create the action with center position, number of twirls, amplitude, a grid size and duration.<br>
--- param duration Specify the duration of the Twirl action. It's a value in seconds.<br>
--- param gridSize Specify the size of the grid.<br>
--- param position Specify the center position of the twirl action.<br>
--- param twirls Specify the twirls count of the Twirl action.<br>
--- param amplitude Specify the amplitude of the Twirl action.<br>
--- return If the creation success, return a pointer of Twirl action; otherwise, return nil.
---@param duration float
---@param gridSize cc.size
---@param position cc.vec2
---@param twirls uint
---@param amplitude float
---@return cc.Twirl
function m:create(duration, gridSize, position, twirls, amplitude) end

--- 
---@return cc.Twirl
function m:clone() end

--- 
---@param time float
---@return cc.Twirl
function m:update(time) end

--- 
---@return cc.Twirl
function m:Twirl() end



return m