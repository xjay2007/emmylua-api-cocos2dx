--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class ccui.RadioButtonGroup : ccui.Widget
local m = {}

--- Remove a radio button from this group.<br>
--- param radio button instance
---@param radioButton ccui.RadioButton
---@return ccui.RadioButtonGroup
function m:removeRadioButton(radioButton) end

--- Query whether no-selection is allowed or not.<br>
--- param true means no-selection is allowed, false means no-selection is not allowed.
---@return boolean
function m:isAllowedNoSelection() end

--- Get the index of selected radio button.<br>
--- return the selected button's index. Returns -1 if no button is selected.
---@return int
function m:getSelectedButtonIndex() end

--- Set a flag for allowing no-selection feature.<br>
--- If it is allowed, no radio button can be selected.<br>
--- If it is not allowed, one radio button must be selected all time except it is empty.<br>
--- Default is not allowed.<br>
--- param true means allowing no-selection, false means disallowing no-selection.
---@param allowedNoSelection boolean
---@return ccui.RadioButtonGroup
function m:setAllowedNoSelection(allowedNoSelection) end

---@overload fun(self:ccui.RadioButtonGroup, index:ccui.RadioButton):ccui.RadioButtonGroup
---@param index int
---@return ccui.RadioButtonGroup
function m:setSelectedButtonWithoutEvent(index) end

--- Add a callback function which would be called when radio button is selected or unselected.<br>
---@param callback fun
---@return ccui.RadioButtonGroup
function m:addEventListener(callback) end

--- Remove all radio button from this group.
---@return ccui.RadioButtonGroup
function m:removeAllRadioButtons() end

--- Get a radio button in this group by index.<br>
--- param index of the radio button<br>
--- return radio button instance. Returns nullptr if out of index.
---@param index int
---@return ccui.RadioButton
function m:getRadioButtonByIndex(index) end

--- Get the number of radio buttons in this group.<br>
--- return the number of radio buttons in this group
---@return int
function m:getNumberOfRadioButtons() end

--- Add a radio button into this group.<br>
--- param radio button instance
---@param radioButton ccui.RadioButton
---@return ccui.RadioButtonGroup
function m:addRadioButton(radioButton) end

---@overload fun(self:ccui.RadioButtonGroup, index:ccui.RadioButton):ccui.RadioButtonGroup
---@param index int
---@return ccui.RadioButtonGroup
function m:setSelectedButton(index) end

--- Create and return a empty RadioButtonGroup instance pointer.
---@return ccui.RadioButtonGroup
function m:create() end

--- 
---@return string
function m:getDescription() end

--- Default constructor.<br>
--- lua new
---@return ccui.RadioButtonGroup
function m:RadioButtonGroup() end



return m