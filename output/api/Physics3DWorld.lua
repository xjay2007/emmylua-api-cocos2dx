--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.Physics3DWorld : cc.Ref
local m = {}

---  set gravity for the physics world 
---@param gravity cc.vec3
---@return cc.Physics3DWorld
function m:setGravity(gravity) end

---  Simulate one frame. 
---@param dt float
---@return cc.Physics3DWorld
function m:stepSimulate(dt) end

--- 
---@return boolean
function m:needCollisionChecking() end

--- 
---@return cc.Physics3DWorld
function m:collisionChecking() end

--- 
---@return cc.Physics3DWorld
function m:setGhostPairCallback() end

---  Remove all Physics3DObjects. 
---@return cc.Physics3DWorld
function m:removeAllPhysics3DObjects() end

---  Check debug drawing is enabled. 
---@return boolean
function m:isDebugDrawEnabled() end

---  Remove all Physics3DConstraint. 
---@return cc.Physics3DWorld
function m:removeAllPhysics3DConstraints() end

---  get current gravity 
---@return cc.vec3
function m:getGravity() end

---  Remove a Physics3DConstraint. 
---@param constraint cc.Physics3DConstraint
---@return cc.Physics3DWorld
function m:removePhysics3DConstraint(constraint) end

---  Add a Physics3DObject. 
---@param physicsObj cc.Physics3DObject
---@return cc.Physics3DWorld
function m:addPhysics3DObject(physicsObj) end

---  Enable or disable debug drawing. 
---@param enableDebugDraw boolean
---@return cc.Physics3DWorld
function m:setDebugDrawEnable(enableDebugDraw) end

---  Remove a Physics3DObject. 
---@param physicsObj cc.Physics3DObject
---@return cc.Physics3DWorld
function m:removePhysics3DObject(physicsObj) end

---  Add a Physics3DConstraint. 
---@param constraint cc.Physics3DConstraint
---@param disableCollisionsBetweenLinkedObjs boolean
---@return cc.Physics3DWorld
function m:addPhysics3DConstraint(constraint, disableCollisionsBetweenLinkedObjs) end

---  Internal method, the updater of debug drawing, need called each frame. 
---@param renderer cc.Renderer
---@return cc.Physics3DWorld
function m:debugDraw(renderer) end

--- 
---@return cc.Physics3DWorld
function m:Physics3DWorld() end



return m