--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class ccexp.TMXLayer : ccexp.Node
local m = {}

---  Returns the position in points of a given tile coordinate.<br>
--- param tileCoordinate The tile Coordinate.<br>
--- return The position in points of a given tile coordinate.
---@param tileCoordinate cc.vec2
---@return cc.vec2
function m:getPositionAt(tileCoordinate) end

---  Set Layer orientation, which is the same as the map orientation. <br>
--- param orientation Layer orientation, which is the same as the map orientation.
---@param orientation int
---@return cc.experimental::TMXLayer
function m:setLayerOrientation(orientation) end

---  Size of the layer in tiles.<br>
--- return Size of the layer in tiles.
---@return cc.size
function m:getLayerSize() end

---  Set the size of the map's tile. <br>
--- param size The new size of the map's tile.
---@param size cc.size
---@return cc.experimental::TMXLayer
function m:setMapTileSize(size) end

---  Layer orientation, which is the same as the map orientation.<br>
--- return Layer orientation, which is the same as the map orientation.
---@return int
function m:getLayerOrientation() end

---  Set the properties to the layer.<br>
--- param properties The properties to the layer.
---@param properties table<any:any>
---@return cc.experimental::TMXLayer
function m:setProperties(properties) end

---  Set the tile layer name.<br>
--- param layerName The new layer name.
---@param layerName string
---@return cc.experimental::TMXLayer
function m:setLayerName(layerName) end

---  Removes a tile at given tile coordinate.<br>
--- param tileCoordinate The tile Coordinate.
---@param tileCoordinate cc.vec2
---@return cc.experimental::TMXLayer
function m:removeTileAt(tileCoordinate) end

---@return table<any:any>
function m:getProperties() end

---  Creates the tiles. 
---@return cc.experimental::TMXLayer
function m:setupTiles() end

---  Set an sprite to the tile,with the tile coordinate and gid.<br>
--- param sprite A Sprite.<br>
--- param pos The tile coordinate.<br>
--- param gid The tile gid.
---@param sprite cc.Sprite
---@param pos cc.vec2
---@param gid uint
---@return cc.experimental::TMXLayer
function m:setupTileSprite(sprite, pos, gid) end

---@overload fun(self:ccexp.TMXLayer, gid:int, tileCoordinate:cc.vec2):cc.experimental::TMXLayer
---@param gid int
---@param tileCoordinate cc.vec2
---@param flags int
---@return cc.experimental::TMXLayer
function m:setTileGID(gid, tileCoordinate, flags) end

---  Size of the map's tile (could be different from the tile's size).<br>
--- return Size of the map's tile (could be different from the tile's size).
---@return cc.size
function m:getMapTileSize() end

---  Return the value for the specific property name.<br>
--- param propertyName The value for the specific property name.<br>
--- return The value for the specific property name.
---@param propertyName string
---@return cc.Value
function m:getProperty(propertyName) end

---  Set the size of the layer in tiles. <br>
--- param size The new size of the layer in tiles.
---@param size cc.size
---@return cc.experimental::TMXLayer
function m:setLayerSize(size) end

---  Get the tile layer name.<br>
--- return The tile layer name.
---@return string
function m:getLayerName() end

---  Set the tileset information for the layer. <br>
--- param info The new tileset information for the layer.
---@param info cc.TMXTilesetInfo
---@return cc.experimental::TMXLayer
function m:setTileSet(info) end

---  Tileset information for the layer.<br>
--- return Tileset information for the layer.
---@return cc.TMXTilesetInfo
function m:getTileSet() end

---  Returns the tile (Sprite) at a given a tile coordinate.<br>
--- The returned Sprite will be already added to the TMXLayer. Don't add it again.<br>
--- The Sprite can be treated like any other Sprite: rotated, scaled, translated, opacity, color, etc.<br>
--- You can remove either by calling:<br>
--- - layer->removeChild(sprite, cleanup);<br>
--- return Returns the tile (Sprite) at a given a tile coordinate.
---@param tileCoordinate cc.vec2
---@return cc.Sprite
function m:getTileAt(tileCoordinate) end

---  Creates a FastTMXLayer with an tileset info, a layer info and a map info.<br>
--- param tilesetInfo An tileset info.<br>
--- param layerInfo A layer info.<br>
--- param mapInfo A map info.<br>
--- return Return an autorelease object.
---@param tilesetInfo cc.TMXTilesetInfo
---@param layerInfo cc.TMXLayerInfo
---@param mapInfo cc.TMXMapInfo
---@return cc.experimental::TMXLayer
function m:create(tilesetInfo, layerInfo, mapInfo) end

--- 
---@param child cc.Node
---@param cleanup boolean
---@return cc.experimental::TMXLayer
function m:removeChild(child, cleanup) end

--- 
---@param renderer cc.Renderer
---@param transform mat4_table
---@param flags uint
---@return cc.experimental::TMXLayer
function m:draw(renderer, transform, flags) end

--- 
---@return string
function m:getDescription() end

--- js ctor
---@return cc.experimental::TMXLayer
function m:TMXLayer() end



return m