--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.Physics3DShape : cc.Ref
local m = {}

--- 
---@return btCollisionShape
function m:getbtShape() end

--- 
---@param radius float
---@return boolean
function m:initSphere(radius) end

--- 
---@param ext cc.vec3
---@return boolean
function m:initBox(ext) end

--- 
---@param radius float
---@param height float
---@return boolean
function m:initCapsule(radius, height) end

--- 
---@param radius float
---@param height float
---@return boolean
function m:initCylinder(radius, height) end

--- get shape type
---@return int
function m:getShapeType() end

--- create box shape<br>
--- param extent The extent of sphere.
---@param extent cc.vec3
---@return cc.Physics3DShape
function m:createBox(extent) end

--- create cylinder shape<br>
--- param radius The radius of cylinder.<br>
--- param height The height.
---@param radius float
---@param height float
---@return cc.Physics3DShape
function m:createCylinder(radius, height) end

--- create convex hull<br>
--- param points The vertices of convex hull<br>
--- param numPoints The number of vertices.
---@param points cc.vec3
---@param numPoints int
---@return cc.Physics3DShape
function m:createConvexHull(points, numPoints) end

--- create capsule shape<br>
--- param radius The radius of capsule.<br>
--- param height The height (cylinder part).
---@param radius float
---@param height float
---@return cc.Physics3DShape
function m:createCapsule(radius, height) end

--- create sphere shape<br>
--- param radius The radius of sphere.
---@param radius float
---@return cc.Physics3DShape
function m:createSphere(radius) end

--- 
---@return cc.Physics3DShape
function m:Physics3DShape() end



return m