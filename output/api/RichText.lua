--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class ccui.RichText : ccui.Widget
local m = {}

--- brief Insert a RichElement at a given index.<br>
--- param element A RichElement type.<br>
--- param index A given index.
---@param element ccui.RichElement
---@param index int
---@return ccui.RichText
function m:insertElement(element, index) end

---@param enable boolean
---@param outlineColor cc.c3b
---@param outlineSize int
---@return ccui.RichText
function m:setAnchorTextOutline(enable, outlineColor, outlineSize) end

--- 
---@return float
function m:getFontSize() end

--- brief Add a RichElement at the end of RichText.<br>
--- param element A RichElement instance.
---@param element ccui.RichElement
---@return ccui.RichText
function m:pushBackElement(element) end

--- 
---@param enable boolean
---@return ccui.RichText
function m:setAnchorTextBold(enable) end

--- 
---@return string
function m:getAnchorFontColor() end

--- 
---@return int
function m:getAnchorTextShadowBlurRadius() end

---@param enable boolean
---@param shadowColor cc.c3b
---@param offset cc.size
---@param blurRadius int
---@return ccui.RichText
function m:setAnchorTextShadow(enable, shadowColor, offset, blurRadius) end

--- 
---@return boolean
function m:isAnchorTextItalicEnabled() end

--- 
---@param color string
---@return ccui.RichText
function m:setAnchorFontColor(color) end

--- 
---@param face string
---@return ccui.RichText
function m:setFontFace(face) end

--- 
---@param enable boolean
---@param glowColor cc.c3b
---@return ccui.RichText
function m:setAnchorTextGlow(enable, glowColor) end

--- 
---@return int
function m:getHorizontalAlignment() end

--- 
---@param a int
---@return ccui.RichText
function m:setHorizontalAlignment(a) end

--- 
---@param enable boolean
---@return ccui.RichText
function m:setAnchorTextDel(enable) end

--- 
---@return cc.c3b
function m:getAnchorTextOutlineColor3B() end

--- 
---@param color4b cc.c4b
---@return string
function m:stringWithColor4B(color4b) end

--- 
---@param xml string
---@param defaults table<any:any>
---@param handleOpenUrl fun
---@return boolean
function m:initWithXML(xml, defaults, handleOpenUrl) end

--- 
---@return cc.c3b
function m:getAnchorFontColor3B() end

--- brief Rearrange all RichElement in the RichText.<br>
--- It's usually called internally.
---@return ccui.RichText
function m:formatText() end

--- 
---@return cc.c3b
function m:getAnchorTextGlowColor3B() end

--- 
---@param url string
---@return ccui.RichText
function m:openUrl(url) end

--- 
---@return string
function m:getFontFace() end

--- 
---@param color string
---@return ccui.RichText
function m:setFontColor(color) end

--- 
---@return boolean
function m:isAnchorTextGlowEnabled() end

--- 
---@return table<any:any>
function m:getDefaults() end

--- 
---@return boolean
function m:isAnchorTextUnderlineEnabled() end

--- 
---@return string
function m:getFontColor() end

--- 
---@return boolean
function m:isAnchorTextShadowEnabled() end

--- 
---@return int
function m:getAnchorTextOutlineSize() end

--- brief Set vertical space between each RichElement.<br>
--- param space Point in float.
---@param space float
---@return ccui.RichText
function m:setVerticalSpace(space) end

--- 
---@return boolean
function m:isAnchorTextDelEnabled() end

--- 
---@param defaults table<any:any>
---@return ccui.RichText
function m:setDefaults(defaults) end

--- 
---@param wrapMode int
---@return ccui.RichText
function m:setWrapMode(wrapMode) end

--- 
---@param size float
---@return ccui.RichText
function m:setFontSize(size) end

---@overload fun(self:ccui.RichText, index:ccui.RichElement):ccui.RichText
---@param index int
---@return ccui.RichText
function m:removeElement(index) end

--- 
---@param enable boolean
---@return ccui.RichText
function m:setAnchorTextItalic(enable) end

--- 
---@return cc.size
function m:getAnchorTextShadowOffset() end

--- 
---@return boolean
function m:isAnchorTextBoldEnabled() end

--- 
---@return cc.c3b
function m:getAnchorTextShadowColor3B() end

--- 
---@param color3b cc.c3b
---@return string
function m:stringWithColor3B(color3b) end

--- 
---@return boolean
function m:isAnchorTextOutlineEnabled() end

--- 
---@return cc.c3b
function m:getFontColor3B() end

--- 
---@return int
function m:getWrapMode() end

--- 
---@param enable boolean
---@return ccui.RichText
function m:setAnchorTextUnderline(enable) end

--- 
---@param color string
---@return cc.c3b
function m:color3BWithString(color) end

--- brief Create a empty RichText.<br>
--- return RichText instance.
---@return ccui.RichText
function m:create() end

--- brief Create a RichText from an XML<br>
--- return RichText instance.
---@param xml string
---@param defaults table<any:any>
---@param handleOpenUrl fun
---@return ccui.RichText
function m:createWithXML(xml, defaults, handleOpenUrl) end

--- 
---@return boolean
function m:init() end

--- 
---@return string
function m:getDescription() end

--- 
---@param ignore boolean
---@return ccui.RichText
function m:ignoreContentAdaptWithSize(ignore) end

--- brief Default constructor.<br>
--- js ctor<br>
--- lua new
---@return ccui.RichText
function m:RichText() end



return m