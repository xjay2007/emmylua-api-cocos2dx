--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class ccui.Scale9Sprite : ccui.Sprite
local m = {}

---@overload fun(self:ccui.Scale9Sprite, sprite:cc.Sprite, rect:cc.rect, rotated:boolean, offset:cc.rect):boolean
---@param sprite cc.Sprite
---@param rect cc.rect
---@param rotated boolean
---@param offset cc.vec2
---@param originalSize cc.size
---@param capInsets cc.rect
---@return boolean
function m:updateWithSprite(sprite, rect, rotated, offset, originalSize, capInsets) end

--- Creates and returns a new sprite object with the specified cap insets.<br>
--- You use this method to add cap insets to a sprite or to change the existing<br>
--- cap insets of a sprite. In both cases, you get back a new image and the<br>
--- original sprite remains untouched.<br>
--- param capInsets The values to use for the cap insets.<br>
--- return A Scale9Sprite instance.
---@param capInsets cc.rect
---@return ccui.Scale9Sprite
function m:resizableSpriteWithCapInsets(capInsets) end

--- Returns the Cap Insets
---@return cc.rect
function m:getCapInsets() end

--- Change the state of 9-slice sprite.<br>
--- see `State`<br>
--- param state A enum value in State.<br>
--- since v3.4
---@param state int
---@return ccui.Scale9Sprite
function m:setState(state) end

--- brief Change the bottom sprite's cap inset.<br>
--- param bottomInset The values to use for the cap inset.
---@param bottomInset float
---@return ccui.Scale9Sprite
function m:setInsetBottom(bottomInset) end

--- Initializes a 9-slice sprite with an sprite frame name and with the specified<br>
--- cap insets.<br>
--- Once the sprite is created, you can then call its "setContentSize:" method<br>
--- to resize the sprite will all it's 9-slice goodness interact.<br>
--- It respects the anchorPoint too.<br>
--- param spriteFrameName The sprite frame name.<br>
--- param capInsets The values to use for the cap insets.<br>
--- return True if initializes success, false otherwise.
---@param spriteFrameName string
---@param capInsets cc.rect
---@return boolean
function m:initWithSpriteFrameName(spriteFrameName, capInsets) end

--- brief Get the original no 9-sliced sprite<br>
--- return A sprite instance.
---@return cc.Sprite
function m:getSprite() end

--- brief Change the top sprite's cap inset.<br>
--- param topInset The values to use for the cap inset.
---@param topInset float
---@return ccui.Scale9Sprite
function m:setInsetTop(topInset) end

--- Set the slice sprite rendering type.<br>
--- When setting to SIMPLE, only 4 vertexes is used to rendering.<br>
--- otherwise 16 vertexes will be used to rendering.<br>
--- see RenderingType
---@param type int
---@return ccui.Scale9Sprite
function m:setRenderingType(type) end

---@overload fun(self:ccui.Scale9Sprite, sprite:cc.Sprite, rect:cc.rect, rotated:cc.rect):boolean
---@overload fun(self:ccui.Scale9Sprite, sprite:cc.Sprite, rect:cc.rect, rotated:boolean, offset:cc.rect):boolean
---@param sprite cc.Sprite
---@param rect cc.rect
---@param rotated boolean
---@param offset cc.vec2
---@param originalSize cc.size
---@param capInsets cc.rect
---@return boolean
function m:init(sprite, rect, rotated, offset, originalSize, capInsets) end

--- brief Change the preferred size of Scale9Sprite.<br>
--- param size A delimitation zone.
---@param size cc.size
---@return ccui.Scale9Sprite
function m:setPreferredSize(size) end

--- brief copies self to copy
---@param copy ccui.Scale9Sprite
---@return ccui.Scale9Sprite
function m:copyTo(copy) end

--- brief Change inner sprite's sprite frame.<br>
--- param spriteFrame A sprite frame pointer.<br>
--- param capInsets The values to use for the cap insets.
---@param spriteFrame cc.SpriteFrame
---@param capInsets cc.rect
---@return ccui.Scale9Sprite
function m:setSpriteFrame(spriteFrame, capInsets) end

--- Query the current bright state.<br>
--- since v3.7
---@return int
function m:getState() end

--- brief Query the bottom sprite's cap inset.<br>
--- return The bottom sprite's cap inset.
---@return float
function m:getInsetBottom() end

--- brief Toggle 9-slice feature.<br>
--- If Scale9Sprite is 9-slice disabled, the Scale9Sprite will rendered as a normal sprite.<br>
--- warning: Don't use setScale9Enabled(false), use setRenderingType(RenderingType::SIMPLE) instead.<br>
--- The setScale9Enabled(false) is kept only for back back compatibility.<br>
--- param enabled True to enable 9-slice, false otherwise.<br>
--- js NA
---@param enabled boolean
---@return ccui.Scale9Sprite
function m:setScale9Enabled(enabled) end

--- brief Query whether the Scale9Sprite is enable 9-slice or not.<br>
--- return True if 9-slice is enabled, false otherwise.<br>
--- js NA
---@return boolean
function m:isScale9Enabled() end

--- 
---@return ccui.Scale9Sprite
function m:resetRender() end

--- Return the slice sprite rendering type.
---@return int
function m:getRenderingType() end

--- brief Query the right sprite's cap inset.<br>
--- return The right sprite's cap inset.
---@return float
function m:getInsetRight() end

--- brief Query the sprite's original size.<br>
--- return Sprite size.
---@return cc.size
function m:getOriginalSize() end

---@overload fun(self:ccui.Scale9Sprite, file:cc.rect, rect:string):boolean
---@param file string
---@param rect cc.rect
---@param capInsets cc.rect
---@return boolean
function m:initWithFile(file, rect, capInsets) end

--- brief Query the top sprite's cap inset.<br>
--- return The top sprite's cap inset.
---@return float
function m:getInsetTop() end

--- brief Change the left sprite's cap inset.<br>
--- param leftInset The values to use for the cap inset.
---@param leftInset float
---@return ccui.Scale9Sprite
function m:setInsetLeft(leftInset) end

--- Initializes a 9-slice sprite with an sprite frame and with the specified<br>
--- cap insets.<br>
--- Once the sprite is created, you can then call its "setContentSize:" method<br>
--- to resize the sprite will all it's 9-slice goodness interact.<br>
--- It respects the anchorPoint too.<br>
--- param spriteFrame The sprite frame object.<br>
--- param capInsets The values to use for the cap insets.<br>
--- return True if initializes success, false otherwise.
---@param spriteFrame cc.SpriteFrame
---@param capInsets cc.rect
---@return boolean
function m:initWithSpriteFrame(spriteFrame, capInsets) end

--- brief Query the Scale9Sprite's preferred size.<br>
--- return Scale9Sprite's preferred size.
---@return cc.size
function m:getPreferredSize() end

--- Set the Cap Insets in Points using the untrimmed size as reference
---@param insets cc.rect
---@return ccui.Scale9Sprite
function m:setCapInsets(insets) end

--- brief Query the left sprite's cap inset.<br>
--- return The left sprite's cap inset.
---@return float
function m:getInsetLeft() end

--- brief Change the right sprite's cap inset.<br>
--- param rightInset The values to use for the cap inset.
---@param rightInset float
---@return ccui.Scale9Sprite
function m:setInsetRight(rightInset) end

---@overload fun(self:ccui.Scale9Sprite):ccui.Scale9Sprite
---@overload fun(self:ccui.Scale9Sprite, file:cc.rect, rect:string):ccui.Scale9Sprite
---@overload fun(self:ccui.Scale9Sprite, file:string, rect:cc.rect):ccui.Scale9Sprite
---@overload fun(self:ccui.Scale9Sprite, file:string):ccui.Scale9Sprite
---@param file string
---@param rect cc.rect
---@param capInsets cc.rect
---@return ccui.Scale9Sprite
function m:create(file, rect, capInsets) end

---@overload fun(self:ccui.Scale9Sprite, spriteFrameName:string):ccui.Scale9Sprite
---@param spriteFrameName string
---@param capInsets cc.rect
---@return ccui.Scale9Sprite
function m:createWithSpriteFrameName(spriteFrameName, capInsets) end

---@overload fun(self:ccui.Scale9Sprite, spriteFrame:cc.SpriteFrame):ccui.Scale9Sprite
---@param spriteFrame cc.SpriteFrame
---@param capInsets cc.rect
---@return ccui.Scale9Sprite
function m:createWithSpriteFrame(spriteFrame, capInsets) end

--- Initializes a 9-slice sprite with an sprite frame name.<br>
--- Once the sprite is created, you can then call its "setContentSize:" method<br>
--- to resize the sprite will all it's 9-slice goodness interact.<br>
--- It respects the anchorPoint too.<br>
--- param spriteFrameName The sprite frame name.<br>
--- return True if initializes success, false otherwise.
---@param spriteFrameName string
---@return boolean
function m:initWithSpriteFrameName(spriteFrameName) end

---@overload fun(self:ccui.Scale9Sprite, file:string):boolean
---@param file string
---@param rect cc.rect
---@return boolean
function m:initWithFile(file, rect) end

--- 
---@return boolean
function m:init() end

--- Default constructor.<br>
--- js ctor<br>
--- lua new
---@return ccui.Scale9Sprite
function m:Scale9Sprite() end



return m