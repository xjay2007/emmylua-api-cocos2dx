--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.TableView : cc.ScrollView,cc.ScrollViewDelegate
local m = {}

--- Updates the content of the cell at a given index.<br>
--- param idx index to find a cell
---@param idx int
---@return cc.TableView
function m:updateCellAtIndex(idx) end

--- determines how cell is ordered and filled in the view.
---@param order int
---@return cc.TableView
function m:setVerticalFillOrder(order) end

--- 
---@param view cc.ScrollView
---@return cc.TableView
function m:scrollViewDidZoom(view) end

--- 
---@return cc.TableView
function m:_updateContentSize() end

--- 
---@return int
function m:getVerticalFillOrder() end

--- Removes a cell at a given index<br>
--- param idx index to find a cell
---@param idx int
---@return cc.TableView
function m:removeCellAtIndex(idx) end

--- 
---@param size cc.size
---@param container cc.Node
---@return boolean
function m:initWithViewSize(size, container) end

--- 
---@param view cc.ScrollView
---@return cc.TableView
function m:scrollViewDidScroll(view) end

--- reloads data from data source.  the view will be refreshed.
---@return cc.TableView
function m:reloadData() end

--- Inserts a new cell at a given index<br>
--- param idx location to insert
---@param idx int
---@return cc.TableView
function m:insertCellAtIndex(idx) end

--- Returns an existing cell at a given index. Returns nil if a cell is nonexistent at the moment of query.<br>
--- param idx index<br>
--- return a cell at a given index
---@param idx int
---@return cc.TableViewCell
function m:cellAtIndex(idx) end

--- Dequeues a free cell if available. nil if not.<br>
--- return free cell
---@return cc.TableViewCell
function m:dequeueCell() end

--- 
---@param pTouch cc.Touch
---@param pEvent cc.Event
---@return cc.TableView
function m:onTouchMoved(pTouch, pEvent) end

--- 
---@param pTouch cc.Touch
---@param pEvent cc.Event
---@return cc.TableView
function m:onTouchEnded(pTouch, pEvent) end

--- 
---@param pTouch cc.Touch
---@param pEvent cc.Event
---@return cc.TableView
function m:onTouchCancelled(pTouch, pEvent) end

--- 
---@param pTouch cc.Touch
---@param pEvent cc.Event
---@return boolean
function m:onTouchBegan(pTouch, pEvent) end

--- js ctor<br>
--- lua new
---@return cc.TableView
function m:TableView() end



return m