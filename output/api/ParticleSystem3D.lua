--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.ParticleSystem3D : cc.Node,cc.BlendProtocol
local m = {}

--- remove affector by index
---@param index int
---@return cc.ParticleSystem3D
function m:removeAffector(index) end

--- resume particle
---@return cc.ParticleSystem3D
function m:resumeParticleSystem() end

--- remove all particle affector
---@return cc.ParticleSystem3D
function m:removeAllAffector() end

--- add particle affector
---@param affector cc.Particle3DAffector
---@return cc.ParticleSystem3D
function m:addAffector(affector) end

--- particle system play control
---@return cc.ParticleSystem3D
function m:startParticleSystem() end

--- is enabled
---@return boolean
function m:isEnabled() end

--- return particle render
---@return cc.Particle3DRender
function m:getRender() end

--- set emitter for particle system, can set your own particle emitter
---@param emitter cc.Particle3DEmitter
---@return cc.ParticleSystem3D
function m:setEmitter(emitter) end

--- 
---@return boolean
function m:isKeepLocal() end

--- Enables or disables the system.
---@param enabled boolean
---@return cc.ParticleSystem3D
function m:setEnabled(enabled) end

--- get particle quota
---@return uint
function m:getParticleQuota() end

--- override function
---@return cc.BlendFunc
function m:getBlendFunc() end

--- pause particle
---@return cc.ParticleSystem3D
function m:pauseParticleSystem() end

--- get particle playing state
---@return int
function m:getState() end

--- get alive particles count
---@return int
function m:getAliveParticleCount() end

--- set particle quota
---@param quota uint
---@return cc.ParticleSystem3D
function m:setParticleQuota(quota) end

--- override function
---@param blendFunc cc.BlendFunc
---@return cc.ParticleSystem3D
function m:setBlendFunc(blendFunc) end

--- set particle render, can set your own particle render
---@param render cc.Particle3DRender
---@return cc.ParticleSystem3D
function m:setRender(render) end

--- stop particle
---@return cc.ParticleSystem3D
function m:stopParticleSystem() end

--- 
---@param keepLocal boolean
---@return cc.ParticleSystem3D
function m:setKeepLocal(keepLocal) end

--- override function
---@param renderer cc.Renderer
---@param transform mat4_table
---@param flags uint
---@return cc.ParticleSystem3D
function m:draw(renderer, transform, flags) end

--- override function
---@param delta float
---@return cc.ParticleSystem3D
function m:update(delta) end

--- 
---@return cc.ParticleSystem3D
function m:ParticleSystem3D() end



return m