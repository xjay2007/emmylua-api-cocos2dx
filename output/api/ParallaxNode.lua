--------------------------------
--- generated by EmmyLua-Api-Cocos2dx-Generator
--------------------------------

---@class cc.ParallaxNode : cc.Node
local m = {}

---  Adds a child to the container with a local z-order, parallax ratio and position offset.<br>
--- param child A child node.<br>
--- param z Z order for drawing priority.<br>
--- param parallaxRatio A given parallax ratio.<br>
--- param positionOffset A given position offset.
---@param child cc.Node
---@param z int
---@param parallaxRatio cc.vec2
---@param positionOffset cc.vec2
---@return cc.ParallaxNode
function m:addChild(child, z, parallaxRatio, positionOffset) end

--- 
---@param cleanup boolean
---@return cc.ParallaxNode
function m:removeAllChildrenWithCleanup(cleanup) end

---  Create a Parallax node. <br>
--- return An autoreleased ParallaxNode object.
---@return cc.ParallaxNode
function m:create() end

---@overload fun(self:cc.ParallaxNode, child:cc.Node, zOrder:int, tag:string):cc.ParallaxNode
---@param child cc.Node
---@param zOrder int
---@param tag int
---@return cc.ParallaxNode
function m:addChild(child, zOrder, tag) end

--- 
---@param renderer cc.Renderer
---@param parentTransform mat4_table
---@param parentFlags uint
---@return cc.ParallaxNode
function m:visit(renderer, parentTransform, parentFlags) end

--- 
---@param child cc.Node
---@param cleanup boolean
---@return cc.ParallaxNode
function m:removeChild(child, cleanup) end

---  Adds a child to the container with a z-order, a parallax ratio and a position offset<br>
--- It returns self, so you can chain several addChilds.<br>
--- since v0.8<br>
--- js ctor
---@return cc.ParallaxNode
function m:ParallaxNode() end



return m